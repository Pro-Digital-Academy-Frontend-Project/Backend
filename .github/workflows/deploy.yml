name: CI/CD Pipeline for Backend

on:
  push:
    branches:
      - main # 배포할 브랜치

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 코드 체크아웃
      - name: Checkout Code
        uses: actions/checkout@v3

      # Docker와 Docker Compose 설치 (필요한 경우에만 설치)
      - name: Set up Docker
        run: |
          # Docker 설치 (GitHub Actions의 ubuntu-latest 환경에는 기본적으로 Docker가 설치되어 있음)
          if ! command -v docker &> /dev/null; then
            echo "Docker가 설치되어 있지 않습니다. 설치 중..."
            sudo apt-get update
            sudo apt-get install -y docker.io
            sudo systemctl start docker
            sudo systemctl enable docker
          else
            echo "Docker가 이미 설치되어 있습니다."
          fi

      # Docker Hub 로그인
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Docker 이미지를 빌드하고 푸시
      - name: Build and Push Docker Image
        run: |
          # Docker 이미지를 빌드
          docker build -t ${{ secrets.DOCKER_USERNAME }}/stockey-express:latest .
          # Docker 이미지를 Docker Hub에 푸시
          docker push ${{ secrets.DOCKER_USERNAME }}/stockey-express:latest

      # 서버에 배포 명령어 실행
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu

            # 서버에서 Docker 이미지를 pull하고 실행
            docker pull ${{ secrets.DOCKER_USERNAME }}/stockey-express:latest

            # app-network 네트워크가 없으면 생성
            docker network inspect app-network || docker network create app-network

            # 기존에 실행 중인 컨테이너가 있으면 중지하고 제거
            docker stop stockey-express || true
            docker rm stockey-express || true

            # 새로운 컨테이너 실행 (app-network 네트워크와 연결)
            docker run -d --name stockey-express --network app-network -e DB_HOST=${{ secrets.SERVER_HOST }} -e DB_USER=${{ secrets.DB_USER }} -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} -e DB_DATABASE=${{ secrets.DB_DATABASE }} -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/stockey-express:latest
